name: serverStudy CI/CD

on:
  push:
    branches:
      - main # 브랜치 이름
  workflow_dispatch: # 수동 실행

jobs:
  build:
    runs-on: ubuntu-latest # OS 환경
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2 # 코드 check out (해당 workflow가 레포지토리에 접근할 수 있게 함)

      - name: Setup Node.js environment
        uses: actions/setup-node@v3.4.1
        with:
          node-version: 16.16.0 # 노드 설치 (16.16.0)

      - name: Install Dependencies
        run: npm install # dependency 설치

      - name: Build a Nest Application
        run: npm run build
        shell: bash # nestJS application 빌드

      - name: Get current time
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: YYYY-MM-DDTHH-mm-ss
          utcOffset: '+09:00'

      - name: Show Current Time
        run: echo "CurrentTime=${{steps.current-time.outputs.formattedTime}}" # (2)
        shell: bash

      # Node
      - name: Make a zip file
        run: zip -r deploy.zip . -x "node_modules/*" "coverage/*" "src/*" "test/*" "README.md" "*.git*"
        shell: bash

      # Spring
      # - name: Generate deployment package
      #   run: |
      #     mkdir -p deploy
      #     cp build/libs/*.jar deploy/application.jar
      #     cp Procfile deploy/Procfile
      #     cp -r .ebextensions deploy/.ebextensions
      #     cp -r .platform deploy/.platform
      #     cd deploy && zip -r deploy.zip .

      - name: Beanstalk Deploy
        uses: einaregilsson/beanstalk-deploy@v20
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }} # 액세스 키
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # 시크릿 키
          application_name: CMC_ServerStudy # 빈스톡 어플리케이션 이름
          environment_name: Cmcserverstudy-env-1 # 빈스톡 어플리케이션 환경 이름
          version_label: github-action-${{steps.current-time.outputs.formattedTime}}
          region: ap-northeast-2 # AWS 리전
          deployment_package: deploy.zip # 코드 압축 파일
          wait_for_environment_recovery: 300

      - name: Deployed!
        run: echo App deployed to ELB
